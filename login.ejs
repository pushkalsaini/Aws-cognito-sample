<html lang="en">
<head>
    <meta charset="UTF-8">
	<title>Aws Cognito</title>
	<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
	<style>
		body { padding-top:50px; }
	</style>
	<script src="/assets/js/jsbn.js"></script>
	<script src="/assets/js/jsbn2.js"></script>
	<script src="/assets/js/sjcl.js"></script>
	<!--<script src="moment.min.js"></script>-->
	<script src="/assets/js/aws-cognito-sdk.min.js"></script>
	<script src="/assets/js/amazon-cognito-identity.min.js"></script>
	<script src="https://sdk.amazonaws.com/js/aws-sdk-2.7.18.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
</head>
<body class="container">
    <header>
        <nav class="navbar navbar-default" role="navigation">
			<div class="container-fluid">
				<ul class="nav navbar-nav">
					<li><a href="/">Home</a></li>
					<li><a href="/">About</a></li>
				</ul>
			</div>
		</nav>
    </header>
    <main>
        <div class="jumbotron">
            <p>Login with Cognito</p>
			<form method="POST" action="" id="id-form">
				<div class="form-group">
					<label for="username">User Name:</label>
					<input type="text" name="username" class="form-control" id="username" required>
				</div>
				<div class="form-group">
					<label for="pwd">Password:</label>
					<input type="password" name="password" class="form-control" id="password" required>
				</div>
			  <button type="submit" class="btn btn-default" id="id-button">Submit</button>
			</form>
        </div>
		<div class="jumbotron">
            <p>User Attirbutes</p>
			<div class="user-attr"></div>
		</div>
		<div class="jumbotron">
            <p>User Devices</p>
			<div class="user-devices"></div>
		</div>	
    </main>
    <footer>
        <p class="text-center text-muted">Â© Copyright 2014 The Awesome People</p>
    </footer>
</body>
<script>
$("#id-button").click(function(){
    //alert('ssss');
	var username = $('input[name="username"]').val();
	var password = $('input[name="password"]').val();
	if(username.length > 0 && password.length >0){
		awlog.authenticateUser(username,password);
		
	}
	return false;
});
function awslogin() {
	this.siteUrl;
}
awslogin.prototype.authenticateUser = function(username,password){
	var _this = this;
	AWS.config.region = 'us-east-1';
	AWS.config.credentials = new AWS.CognitoIdentityCredentials({
		IdentityPoolId: ''
	});

	AWSCognito.config.region = 'us-east-1';
	AWSCognito.config.credentials = new AWS.CognitoIdentityCredentials({
	  IdentityPoolId: ''
	});

	// Need to provide placeholder keys unless unauthorised user access is enabled for user pool
	AWSCognito.config.update({
						accessKeyId: ''
						, secretAccessKey: ''
					})

	var poolData = {
	  UserPoolId : '',
	  ClientId : ''
	};

	var userPool = new AWSCognito.CognitoIdentityServiceProvider.CognitoUserPool(poolData);

	var userData = {
	  Username : username,
	  Pool : userPool
	};

	var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);

	var authenticationData = {
	  Username : username,
	  Password : password,
	};

	var authenticationDetails = new AWSCognito.CognitoIdentityServiceProvider.AuthenticationDetails(authenticationData);
	cognitoUser.authenticateUser(authenticationDetails, {
	  onSuccess: function (result) {
		AWS.config.credentials = new AWS.CognitoIdentityCredentials({
			IdentityPoolId : '', // your identity pool id here
			Logins : {
				// Change the key below according to the specific region your user pool is in.
				'' : result.getIdToken().getJwtToken()
			}
		});
		_this.listUserAttributes(cognitoUser,result);
		_this.listDevices(cognitoUser,result);
		  //alert(AWS.config.credentials.identityId);
		  //alert('access token = ' + result.getAccessToken().getJwtToken());
		  //alert('idToken = ' + result.idToken.jwtToken);
		
	  },
	  onFailure: function(err) {
		  alert(err);
	  },
	});
}
awslogin.prototype.listUserAttributes = function(cognitoUser,result){
	var _this = this;
	var _html = '';
	_html = '<ul class="list-group">';
	cognitoUser.getUserAttributes(function(err, result) {
		if (err) {
			alert(err);
		}else{
			$.each(result, function(idx, attribute){
				_html += '<li class="list-group-item">User '+attribute.getName()+' is '+attribute.getValue()+'</li>';
				//attributesBox.append($('<li/>', {html: 'attribute <a>' + attribute.getName() + '</a> has value <a>' + attribute.getValue() + '</a>'}));
			});
			$('.user-attr').html(_html);
		}
	});
	_html = '</ul>';
}
awslogin.prototype.listDevices = function(cognitoUser,result){
	var _this = this;
	var limit = 20;
    var paginationToken = null;
	
	cognitoUser.listDevices(limit, paginationToken, {
		onSuccess: function (result) {
			$.each(result.Devices, function(idx, device){
				var _dhtml = "<ul class='list-group'><li class='list-group-item'>Device <a>" + device.DeviceKey + "</a>";

				$.each(device.DeviceAttributes, function(idx, attribute){
					_dhtml += " <br/>Attribute <a>" + attribute.Name + "</a> is <a>" + attribute.Value + "</a>";
				});
				_dhtml += '</li></ul>';
				$('.user-devices').append(_dhtml);
				//alert(_dhtml);
			});
		},
		onFailure: function(err) {
			alert('ERROR: LISTDEVICES '+err);
			//new Login({refresh: true});
		}
	});
}
var awlog = new awslogin();	
</script>
</html>